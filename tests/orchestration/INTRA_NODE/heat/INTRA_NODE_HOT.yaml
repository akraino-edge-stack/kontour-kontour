description: Stack built for INTRA NODE topology. All referred generated resources are prefixed with the template
  name (i.e. KT_INTRA_NODE). Creates 2 VMs on a single compute node.
heat_template_version: '2015-04-30'
parameters:
  key_name:
    type: string
    label: Key Name
    description: Name of key-pair to be used for compute instance
  image_id:
    type: string
    label: Image ID
    description: Image to be used for compute instance
  router_id:
    type: string
    label: Router ID
    description: Router to be used from master VM
  external_net_name:
    type: string
    label: External Network Name
    description: Name of the external network with FIP
  subnet_cidr:
    type: string
    label: Subnet CIDR
    description: SSH subnet CIDR for traffic

outputs:
  server1.KT_INTRA_NODE:
    description: VM UUID
    value: {get_resource: server1.KT_INTRA_NODE}
  server1.KT_INTRA_NODE-fip:
    description: floating ip server1.KT_INTRA_NODE-fip
    value:
      get_attr: [server1.KT_INTRA_NODE-fip, ip]
  server1.KT_INTRA_NODE-test-port0:
    description: Address for interface server1.KT_INTRA_NODE-test-port0
    value:
      get_attr: [server1.KT_INTRA_NODE-test-port0, fixed_ips,
        0, ip_address]
  server1.KT_INTRA_NODE.hypervisor_hostname:
    description: VM hypervisor name
    value:
      get_attr: [server1.KT_INTRA_NODE, show, 'OS-EXT-SRV-ATTR:hypervisor_hostname']
  server1.KT_INTRA_NODE.instance_name:
    description: VM instance name
    value:
      get_attr: [server1.KT_INTRA_NODE, show, 'OS-EXT-SRV-ATTR:instance_name']
  server0.KT_INTRA_NODE:
    description: VM UUID
    value: {get_resource: server0.KT_INTRA_NODE}
  server0.KT_INTRA_NODE-fip:
    description: floating ip server0.KT_INTRA_NODE-fip
    value:
      get_attr: [server0.KT_INTRA_NODE-fip, ip]
  server0.KT_INTRA_NODE-test-port0:
    description: Address for interface server0.KT_INTRA_NODE-test-port0
    value:
      get_attr: [server0.KT_INTRA_NODE-test-port0, fixed_ips,
        0, ip_address]
  server0.KT_INTRA_NODE.hypervisor_hostname:
    description: VM hypervisor name
    value:
      get_attr: [server0.KT_INTRA_NODE, show, 'OS-EXT-SRV-ATTR:hypervisor_hostname']
  server0.KT_INTRA_NODE.instance_name:
    description: VM instance name
    value:
      get_attr: [server0.KT_INTRA_NODE, show, 'OS-EXT-SRV-ATTR:instance_name']
  KT_INTRA_NODE-default_security_group:
    description: ID of Security Group
    value: {get_resource: KT_INTRA_NODE-default_security_group}
  KT_INTRA_NODE-test:
    description: Network KT_INTRA_NODE-test ID
    value: {get_resource: KT_INTRA_NODE-test}
  KT_INTRA_NODE-test-subnet0:
    description: subnet KT_INTRA_NODE-test-subnet0 ID
    value: {get_resource: KT_INTRA_NODE-test-subnet0}
  KT_INTRA_NODE-test-subnet0.gateway_ip:
    description: Gateway for subnet KT_INTRA_NODE-test-subnet0
      ID
    value:
      get_attr: [KT_INTRA_NODE-test-subnet0, gateway_ip]
resources:
  server1.KT_INTRA_NODE:
    depends_on: [server1.KT_INTRA_NODE-test-port0, KT_INTRA_NODE-server]
    properties:
      admin_user: ubuntu
      config_drive: true
      flavor: {get_resource: KT_INTRA_NODE-server}
      image:  { get_param: image_id }
      key_name: {get_param: key_name}
      name: server1.KT_INTRA_NODE
      networks:
      - port: {get_resource: server1.KT_INTRA_NODE-test-port0}
      scheduler_hints:
        different_host:
        same_host: []
        - {get_resource: server0.KT_INTRA_NODE}
    type: OS::Nova::Server
  server1.KT_INTRA_NODE-fip:
    depends_on: [server1.KT_INTRA_NODE-test-port0, KT_INTRA_NODE-default_security_group]
    properties: {pool: { get_param: external_net_name }}
    type: OS::Nova::FloatingIP
  server1.KT_INTRA_NODE-fip-assoc:
    depends_on: [server1.KT_INTRA_NODE-test-port0, server1.KT_INTRA_NODE-fip]
    properties:
      floatingip_id: {get_resource: server1.KT_INTRA_NODE-fip}
      port_id: {get_resource: server1.KT_INTRA_NODE-test-port0}
    type: OS::Neutron::FloatingIPAssociation
  server1.KT_INTRA_NODE-test-port0:
    depends_on: [KT_INTRA_NODE-test-subnet0, KT_INTRA_NODE-default_security_group]
    properties:
      binding:vnic_type: normal
      fixed_ips:
      - subnet_id: {get_resource: KT_INTRA_NODE-test-subnet0}
      name: server1.KT_INTRA_NODE-test-port0
      network_id: {get_resource: KT_INTRA_NODE-test}
      port_security_enabled: true
      security_groups: [KT_INTRA_NODE-default_security_group]
    type: OS::Neutron::Port
  server0.KT_INTRA_NODE:
    depends_on: [server0.KT_INTRA_NODE-test-port0, KT_INTRA_NODE-server]
    properties:
      admin_user: ubuntu
      config_drive: true
      flavor: {get_resource: KT_INTRA_NODE-server}
      image:  { get_param: image_id }
      key_name: { get_param: key_name }
      name: server0.KT_INTRA_NODE
      networks:
      - port: {get_resource: server0.KT_INTRA_NODE-test-port0}
      scheduler_hints:
        different_host: []
        same_host: []
    type: OS::Nova::Server
  server0.KT_INTRA_NODE-fip:
    depends_on: [server0.KT_INTRA_NODE-test-port0, KT_INTRA_NODE-default_security_group]
    properties: {pool: { get_param: external_net_name }}
    type: OS::Nova::FloatingIP
  server0.KT_INTRA_NODE-fip-assoc:
    depends_on: [server0.KT_INTRA_NODE-test-port0, server0.KT_INTRA_NODE-fip]
    properties:
      floatingip_id: {get_resource: server0.KT_INTRA_NODE-fip}
      port_id: {get_resource: server0.KT_INTRA_NODE-test-port0}
    type: OS::Neutron::FloatingIPAssociation
  server0.KT_INTRA_NODE-test-port0:
    depends_on: [KT_INTRA_NODE-test-subnet0, KT_INTRA_NODE-default_security_group]
    properties:
      binding:vnic_type: normal
      fixed_ips:
      - subnet_id: {get_resource: KT_INTRA_NODE-test-subnet0}
      name: server0.KT_INTRA_NODE-test-port0
      network_id: {get_resource: KT_INTRA_NODE-test}
      port_security_enabled: true
      security_groups: [KT_INTRA_NODE-default_security_group]
    type: OS::Neutron::Port
  KT_INTRA_NODE-default_security_group:
    properties:
      description: Security Group allowing icmp and udp/tcp on all ports
      name: KT_INTRA_NODE-default_security_group
      rules:
      - {direction: egress, ethertype: IPv4, remote_ip_prefix: 0.0.0.0/0}
      - {direction: egress, ethertype: IPv6, remote_ip_prefix: '::/0'}
      - {direction: ingress, ethertype: IPv4, port_range_max: '65535', port_range_min: '1',
        protocol: tcp, remote_ip_prefix: 0.0.0.0/0}
      - {direction: ingress, ethertype: IPv4, port_range_max: '65535', port_range_min: '1',
        protocol: udp, remote_ip_prefix: 0.0.0.0/0}
      - {direction: ingress, ethertype: IPv4, protocol: icmp, remote_ip_prefix: 0.0.0.0/0}
      - {direction: ingress, ethertype: IPv6, port_range_max: '65535', port_range_min: '1',
        protocol: tcp, remote_ip_prefix: '::/0'}
      - {direction: ingress, ethertype: IPv6, port_range_max: '65535', port_range_min: '1',
        protocol: udp, remote_ip_prefix: '::/0'}
      - {direction: ingress, ethertype: IPv6, protocol: icmp, remote_ip_prefix: '::/0'}
    type: OS::Neutron::SecurityGroup
  KT_INTRA_NODE-server:
    properties:
      disk: 20
      extra_specs: {'hw:cpu_policy': dedicated, 'hw:cpu_threads_policy': prefer, 'hw:mem_page_size': any}
      ram: 4096
      swap: 0
      vcpus: 4
    type: OS::Nova::Flavor
  KT_INTRA_NODE-test:
    properties: {name: KT_INTRA_NODE-test, port_security_enabled: true,
      shared: false}
    type: OS::Neutron::Net
  KT_INTRA_NODE-test-subnet0:
    depends_on: KT_INTRA_NODE-test
    properties:
      cidr: { get_param: subnet_cidr }
      dns_nameservers: [8.8.8.8]
      name: KT_INTRA_NODE-test-subnet0
      network_id: {get_resource: KT_INTRA_NODE-test}
    type: OS::Neutron::Subnet
  KT_INTRA_NODE-test-subnet0-if0:
    depends_on: [KT_INTRA_NODE-test-subnet0]
    properties:
      router_id: { get_param: router_id }
      subnet_id: {get_resource: KT_INTRA_NODE-test-subnet0}
    type: OS::Neutron::RouterInterface
